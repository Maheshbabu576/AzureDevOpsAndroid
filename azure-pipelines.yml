# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
  - master

pool:
  vmImage: 'macos-latest'

#steps:
#  - task: Gradle@2
#    inputs:
#      workingDirectory: ''
#      gradleWrapperFile: 'gradlew'
#      gradleOptions: '-Xmx3072m'
#      publishJUnitResults: false
#      testResultsFiles: '**/TEST-*.xml'
#      tasks: 'assembleDebug'
#
##  - task: CopyFiles@2
###      displayName: 'Copy Files to'
##    inputs:
##      SourceFolder: 'C:\Users\Satya\Desktop\Test\'
##      Contents: '**/*.apk'
##      TargetFolder: '$(build.artifactStagingDirectory)'
steps:
  #  - task: Gradle@2
  #    inputs:
  #      workingDirectory: ''
  #      gradleWrapperFile: 'gradlew'
  #      publishJUnitResults: false
  #      tasks: 'assembleDebug'

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      publishJUnitResults: false
      tasks: 'assembleRelease'

  - task: AndroidSigning@3
    inputs:
      apkFiles: '**/*.apk'
      apksign: true
      apksignerKeystoreFile: 'MyKeyStore.keystore'
      apksignerKeystorePassword: 'Mobile@123'
      apksignerKeystoreAlias: 'Mobile'
      apksignerKeyPassword: 'Mobile@123'
      apksignerArguments: --out $(Build.SourcesDirectory)/app/build/outputs/apk/release/my-crazy-app.release.apk
      zipalign: true

  - task: CopyFiles@2
    inputs:
      contents: '**/*.apk'
      targetFolder: '$(build.artifactStagingDirectory)'

  #  - task: PublishBuildArtifacts@1
  #    inputs:
  #      pathToPublish: '$(build.artifactStagingDirectory)/app/build/outputs/'
  #      artifactName: 'apk-files'
  #      artifactType: 'container'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/app/build/outputs/apk/release/'
      artifactName: 'apks'
      publishLocation: 'container'